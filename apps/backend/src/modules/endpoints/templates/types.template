// Generated by the auto-generation engine

import { BaseEntity } from '../common';

/**
 * {{entityName}}-related types and interfaces
 */

export interface {{entityName}} extends BaseEntity {
  {{#each fields}}
  {{name}}{{#if optional}}?{{/if}}: {{type}};
  {{/each}}
}

{{#if hasCreate}}
export interface Create{{entityName}}Dto {
  {{#each createFields}}
  {{name}}{{#unless required}}?{{/unless}}: {{type}};
  {{/each}}
}
{{/if}}

{{#if hasUpdate}}
export interface Update{{entityName}}Dto {
  {{#each updateFields}}
  {{name}}?: {{type}};
  {{/each}}
}
{{/if}}

{{#if hasItems}}
{{#each specialInterfaces}}
export interface {{name}} {
  {{#each fields}}
  {{name}}{{#unless required}}?{{/unless}}: {{type}};
  {{/each}}
}
{{/each}}
{{/if}}

// Tipos adicionales para funcionalidad extendida
export interface {{entityName}}SearchParams {
  {{#each fields}}
  {{#if (eq type "string")}}
  {{#unless (eq name "id")}}
  {{#unless (eq name "createdAt")}}
  {{#unless (eq name "updatedAt")}}
  {{name}}?: string;
  {{/unless}}
  {{/unless}}
  {{/unless}}
  {{/if}}
  {{#if (eq type "number")}}
  {{#unless (eq name "id")}}
  min{{capitalize name}}?: number;
  max{{capitalize name}}?: number;
  {{/unless}}
  {{/if}}
  {{#if (eq type "boolean")}}
  {{name}}?: boolean;
  {{/if}}
  {{/each}}
  {{#each fields}}
  {{#if (eq name "createdAt")}}
  startDate?: string;
  endDate?: string;
  {{/if}}
  {{/each}}
  q?: string; // search query
}

export interface {{entityName}}Validation {
  {{#each fieldValidations}}
  {{field}}: {
    {{validation}}
  };
  {{/each}}
  {{#if hasItems}}
  items: {
    minItems: 1;
    required: true;
  };
  'items.*.quantity': {
    minimum: 1;
    required: true;
  };
  'items.*.price': {
    minimum: 0;
    required: true;
  };
  {{/if}}
} 